package laberintoMio;

import java.util.ArrayList;

public class Main{
	
	/*
	 * Crea una función que dibuje una espiral como la del ejemplo.
	 * - Únicamente se indica de forma dinámica el tamaño del lado.
	 * - Símbolos permitidos: ═ ║ ╗ ╔ ╝ ╚
	 *
	 * Ejemplo espiral de lado 5 (5 filas y 5 columnas):
	 * ════╗
	 * ╔══╗║
	 * ║╔╗║║
	 * ║╚═╝║
	 * ╚═══╝
	 */
	
	public static int[][] matriz = {
	        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		    {1, 0, 1, 1, 0, 1, 1, 0, 1, 1},
		    {1, 0, 1, 1, 0, 1, 1, 0, 1, 1},
		    {1, 0, 1, 1, 0, 1, 0, 0, 0, 1},
		    {1, 0, 0, 0, 0, 1, 1, 0, 1, 1},
		    {1, 1, 1, 1, 0, 1, 1, 0, 1, 1},
		    {1, 0, 1, 1, 0, 1, 1, 0, 1, 1},
		    {1, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		    {1, 0, 1, 1, 1, 1, 1, 0, 1, 1},
		    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
	    };
	public static int[][] matriz1 = {
	{1,1,1,1,1,1,1,1,1,1},
	{1,0,0,0,1,0,0,0,0,1},
	{1,0,1,0,0,0,1,1,0,1},
	{1,0,0,1,1,0,1,1,1,1},
	{1,1,1,1,1,0,0,0,1,1},
	{1,0,0,0,1,1,1,0,1,1},
	{1,0,1,0,0,0,1,0,0,1},
	{1,1,1,0,1,0,1,1,0,1},
	{1,0,0,0,1,0,0,0,0,1},
	{1,1,1,1,1,1,1,1,1,1},
};
	
	public static int[][] matriz2 = {
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
	{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1},
	{1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1},
	{1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1},
	{1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1},
	{1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
	{1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,0,1},
	{1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1},
	{1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1},
	{1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1},
	{1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1},
	{1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
	{1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1},
	{1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,1},
	{1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1},
	{1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1},
	{1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1},
	{1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1},
	{1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1},
	{1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
	};
	
	 public static int[][]lab={{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					           {1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
					           {1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,0,1,1},
					           {1,0,1,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,1,1,0,1,1,0,1,0,1,1},
					           {1,0,1,1,0,0,1,0,1,0,1,0,1,1,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,1},
					           {1,0,0,0,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,1,1,1,0,1,1,1,1,0,1,1},
					           {1,0,1,1,1,0,0,1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,0,0,0,0,0,1,0,0,1},
					           {1,0,1,1,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1},
					           {1,0,1,1,1,0,1,1,1,0,1,0,0,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,1},
					           {1,0,0,0,1,1,0,1,1,0,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,1,0,1},
					           {1,1,1,0,1,1,0,1,0,0,1,1,0,1,0,0,0,0,0,1,0,1,1,0,0,1,0,1,1,0,1},
					           {1,0,1,0,1,1,0,1,1,0,1,0,0,1,0,1,0,1,1,1,0,1,1,0,1,1,0,0,0,0,1},
					           {1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,1,0,0,1,1,1,1,1,0,1},
				               {1,0,1,0,0,0,0,1,1,0,1,1,0,1,1,0,0,1,1,1,0,1,1,0,0,1,1,1,1,0,1},
				               {1,0,1,1,1,1,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,1,1,0,0,1},
					            {1,0,1,0,0,0,1,0,0,0,1,1,0,1,1,0,1,0,1,0,1,1,0,1,0,1,0,0,0,1,1},
					            {1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,1,1,0,1,1},
					            {1,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,0,1,0,1,0,1,0,1,0,1,1},
					            {1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,0,0,1},
					            {1,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1},
					            {1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,0,1,1,1,1},
					            {1,0,1,0,0,1,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,1,0,1},
					            {1,0,1,1,0,0,1,0,1,0,1,0,1,1,0,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1},
					            {1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1},
					            {1,1,1,0,1,0,0,0,0,0,1,0,1,1,0,1,0,1,1,0,0,0,1,0,0,1,1,0,1,1,1},
					            {1,0,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,1,0,0,0,0,1,1,1},
					            {1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,1,0,1,1,0,0,0,0,1,1,1,1,0,0,1,1},
					            {1,0,0,0,0,0,0,1,1,0,1,1,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,0,1,1},
					            {1,1,1,0,1,1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1},
					            {1,0,0,0,1,1,1,1,1,0,0,0,0,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0,1,0,1},
					            {1,0,1,0,1,0,0,1,1,0,1,1,0,1,0,1,0,1,0,0,0,1,0,1,1,1,1,0,1,0,1},
					            {1,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,1},
					            {1,0,1,1,1,1,1,0,1,0,0,1,0,0,1,0,1,0,1,1,0,1,0,1,1,0,1,1,1,0,1},
					            {1,0,1,0,0,0,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,0,1},
					            {1,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,1,1,0,1,0,1,1,1,0,1,0,1,1},
					            {1,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1},
					            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					        };
	
	public static ArrayList<Integer[]> nodosTotales = new ArrayList<Integer[]>();
	
	public static Laberinto laberinto = new Laberinto();
	
	public static void main(String[] args) {
		
		int min =0;
		
		inOut();
		
		min=laberinto.contarblancos();
		
		do {
			
			laberinto.sinSalida();
			int blancos = laberinto.contarblancos();
			
			if(blancos<min) {
				min=blancos;
			}else {
				break;
			}	
			
		}while(true);
		
		/*if(laberinto.avanzar(laberinto.getEntrada()[0],laberinto.getEntrada()[1] )) {
			System.out.println("Solucion encontrada");
			laberinto.imprimirLaberinto(false);

		}else {
			System.out.println("No se ha encontrado solucion");
		}*/
		
		int[][] nuevo = laberinto.caminoMasCorto(laberinto.getEntrada()[0], laberinto.getEntrada()[1],laberinto.getControl());
		laberinto.setControl(nuevo);
		laberinto.imprimirLaberinto(false);

	}
	
	public static void inOut() {
		
		//laberinto = new Laberinto(lab);
		laberinto = new Laberinto(matriz2);
		//laberinto= new Laberinto(1, 1, 19, 19,matriz2);
		
		System.out.println();
		System.out.println("\tLaberinto propuesto: ");
		System.out.println();
		
		laberinto.imprimirLaberinto(true);
			
	}
	
}